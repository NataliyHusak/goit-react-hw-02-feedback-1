{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Statistic/Statistic.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistic/Statistic.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","good","neutral","bad","className","Styles","feedbackSection","feedbackButton","type","onClick","name","data-value","Statistic","label","value","item","Statistics","total","positivePercentage","statistics","title","Section","children","section","Notification","message","App","state","handleBtnClick","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","percentage","Number","toFixed","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1ffc566.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackSection\":\"FeedbackOptions_feedbackSection__CaSOo\",\"feedbackButton\":\"FeedbackOptions_feedbackButton__2NuoQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistic_item__ahlye\",\"label\":\"Statistic_label__3eJ79\",\"value\":\"Statistic_value__lBZWV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2BOjU\",\"title\":\"Statistics_title__3XmDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3gqbA\",\"title\":\"Section_title__NbKnv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__3XaR_\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  const { good, neutral, bad } = options;\n  return (\n    <div className={Styles.feedbackSection}>\n      <button\n        className={Styles.feedbackButton}\n        type=\"button\"\n        onClick={onLeaveFeedback}\n        name=\"good\"\n        data-value={good}\n      >\n        Good\n      </button>\n      <button\n        className={Styles.feedbackButton}\n        type=\"button\"\n        onClick={onLeaveFeedback}\n        name=\"neutral\"\n        data-value={neutral}\n      >\n        Neutral\n      </button>\n      <button\n        className={Styles.feedbackButton}\n        type=\"button\"\n        onClick={onLeaveFeedback}\n        name=\"bad\"\n        data-value={bad}\n      >\n        Bad\n      </button>\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './Statistic.module.css';\n\nexport default function Statistic({ label, value }) {\n  return (\n    <li className={Styles.item}>\n      <span className={Styles.label}>{label}</span>\n      <div className={Styles.value}>{value} &#37;</div>\n    </li>\n  );\n}\nStatistic.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Statistic from '../Statistic/Statistic';\nimport Styles from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul className={Styles.statistics}>\n      <li>\n        <h3 className={Styles.title}>Statistics</h3>\n      </li>\n      <Statistic label=\"Good\" value={good} />\n      <Statistic label=\"Neutral\" value={neutral} />\n      <Statistic label=\"Bad\" value={bad} />\n      <Statistic label=\"Total\" value={total} />\n      <Statistic label=\"Positive feedback\" value={positivePercentage} />\n    </ul>\n  );\n}\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={Styles.section}>\n      <h2 className={Styles.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return (\n    <div>\n      <h2 className={Styles.title}>{message}</h2>\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\n// import shortid from 'shortid';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport Section from '../Section/Section';\nimport Notification from '../Notification/Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleBtnClick = e => {\n    const { name } = e.target;\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return (good / this.countTotalFeedback()) * 100;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    // const { goodId, neutralId, badId } = this.handleIds;\n    const total = this.countTotalFeedback();\n    const percentage = Number(\n      this.countPositiveFeedbackPercentage().toFixed(0),\n    );\n    return (\n      <>\n        <Section\n          // className={SectionStyles}\n          title=\"Please leave feedback\"\n        >\n          <FeedbackOptions\n            // className={FeedbackOptionsStyles}\n            options={this.state}\n            onLeaveFeedback={this.handleBtnClick}\n          />\n          {this.countTotalFeedback() < 1 ? (\n            <Notification\n              // className={NotificationStyles}\n              message=\"No feedback given\"\n            />\n          ) : (\n            <Statistics\n              // className={StatisticsStyles}\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={percentage}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}